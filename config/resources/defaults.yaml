#
# Copyright (C) 2024, Pelican Project, Morgridge Institute for Research
#
# Licensed under the Apache License, Version 2.0 (the "License"); you
# may not use this file except in compliance with the License.  You may
# obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

Logging:
  Level: error
Client:
  SlowTransferRampupTime: 100s
  SlowTransferWindow: 30s
  StoppedTransferTimeout: 100s
  WorkerCount: 5
Server:
  WebPort: 8444
  WebHost: "0.0.0.0"
  EnableUI: true
  RegistrationRetryInterval: 10s
  StartupTimeout: 10s
  UILoginRateLimit: 1
  UnprivilegedUser: pelican
Director:
  DefaultResponse: cache
  CacheSortMethod: "distance"
  MinStatResponse: 1
  MaxStatResponse: 1
  StatTimeout: 2000ms
  # This was decreased from the origin value of `1000` to `100` to
  # reduce the potential memory use (each service could have up to
  # `StatConcurrencyLimit` goroutines running in parallel).  It's
  # unclear whether having more than 100 concurrent queries to the
  # remote origin/cache is a good idea anyway...
  StatConcurrencyLimit: 100
  AdvertisementTTL: 15m
  OriginCacheHealthTestInterval: 15s
  EnableBroker: true
  CheckOriginPresence: true
  CheckCachePresence: true
  AssumePresenceAtSingleOrigin: true
  CachePresenceTTL: 1m
  # This was originally 10k entries; after some informal measurements,
  # it seems golang uses 500 - 1000 bytes per entry; a reduction to
  # 2k means there will be around 1-2MB of cached data per server.
  CachePresenceCapacity: 2000
Cache:
  DefaultCacheTimeout: "9.5s"
  EnablePrefetch: true
  Port: 8442
  SelfTest: true
  SelfTestInterval: 15s
  LowWatermark: 90
  HighWaterMark: 95
  BlocksToPrefetch: 0
  EnableTLSClientAuth: false
Lotman:
  EnabledPolicy: "fairshare"
  DefaultLotExpirationLifetime: "2016h"
  DefaultLotDeletionLifetime: "4032h"
  PolicyDefinitions:
    - PolicyName: "fairshare"
      DivideUnallocated: true
      PurgeOrder: ["del", "exp", "opp", "ded"]
      DiscoverPrefixes: true
      MergeLocalWithDiscovered: false
LocalCache:
  HighWaterMarkPercentage: 95
  LowWaterMarkPercentage: 85
Origin:
  Multiuser: false
  EnableMacaroons: false
  EnableVoms: true
  EnableUI: true
  EnablePublicReads: false
  EnableReads: true
  EnableWrites: true
  EnableListings: true
  EnableDirectReads: true
  Port: 8443
  SelfTestInterval: 15s
Registry:
  InstitutionsUrlReloadMinutes: 15m
  RequireCacheApproval: false
  RequireOriginApproval: false
Monitoring:
  PortLower: 9930
  PortHigher: 9999
  TokenExpiresIn: 1h
  TokenRefreshInterval: 5m
  MetricAuthorization: true
  PromQLAuthorization: true
  AggregatePrefixes: ["/*"]
  DataRetention: 360h
  LabelLimit: 64
  LabelNameLengthLimit: 128
  LabelValueLengthLimit: 2048
  SampleLimit: 200
Shoveler:
  MessageQueueProtocol: amqp
  PortLower: 9930
  PortHigher: 9999
  AMQPExchange: shoveled-xrd
Xrootd:
  MaxStartupWait: "10s"
  Mount: ""
  ManagerPort: 1213
  DetailedMonitoringPort: 9930
  SummaryMonitoringPort: 9931
  AuthRefreshInterval: 5m
Transport:
  DialerTimeout: 10s
  DialerKeepAlive: 30s
  MaxIdleConns: 30
  IdleConnTimeout: 90s
  TLSHandshakeTimeout: 15s
  ExpectContinueTimeout: 1s
  ResponseHeaderTimeout: 10s
OIDC:
  Issuer: "https://cilogon.org"
  AuthorizationEndpoint: "https://cilogon.org/authorize"
  DeviceAuthEndpoint: "https://cilogon.org/oauth2/device_authorization"
  TokenEndpoint: "https://cilogon.org/oauth2/token"
  UserInfoEndpoint: "https://cilogon.org/oauth2/userinfo"
Issuer:
  TomcatLocation: /opt/tomcat
  ScitokensServerLocation: /opt/scitokens-server
  QDLLocation: /opt/qdl
  OIDCAuthenticationUserClaim: sub
  OIDCGroupClaim: groups
  AuthenticationSource: OIDC
