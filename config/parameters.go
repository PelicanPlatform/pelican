// Code generated by go generate; DO NOT EDIT.

package config

import (
	"path/filepath"
	"github.com/spf13/viper"
)

var rootBase string = "/etc/pelican"
var configBase string

type Param int64

var isRoot bool

const (
	TLSCertificate Param = iota
	RobotsTxtFile
	ScitokensConfig
	TLSKey
	XrootdRun
)

func SetRoot(root bool) {
	isRoot = root
}

func SetConfigBase(cBase string){
	configBase = cBase
}

func (p Param) path() string {
	switch p {
	case TLSCertificate:
		return "certificates/tls.crt"
	case RobotsTxtFile:
		return "robots.txt"
	case ScitokensConfig:
		return "xrootd/scitokens.cfg"
	case TLSKey:
		return "certificates/tls.key"
	case XrootdRun:
		return "pelican"
	}
	return "unknown"
}

func (p Param) name() string {
	switch p {
	case TLSCertificate:
		return "TLSCertificate"
	case RobotsTxtFile:
		return "RobotsTxtFile"
	case ScitokensConfig:
		return "ScitokensConfig"
	case TLSKey:
		return "TLSKey"
	case XrootdRun:
		return "XrootdRun"
	}
	return "unknown"
}

func (p Param) SetPath() {
	relPath := p.path()
	if isRoot {
		viper.SetDefault(p.name(), filepath.Join(rootBase, relPath))
	} else {
		viper.SetDefault(p.name(), filepath.Join(configBase, relPath))
	}
}

func (p Param) GetPath() string {
	enumName := p.name()

	return viper.GetString(enumName)
}
