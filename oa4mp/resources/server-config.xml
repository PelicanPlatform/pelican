<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Copyright (C) 2025, Pelican Project, Morgridge Institute for Research
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you
 * may not use this file except in compliance with the License.  You may
 * obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
-->
<config>
    <service name="scitokens-server"

             OIDCEnabled="false"
             clientSecretLength="24"
             debug="trace"
             disableDefaultStores="true"
             enableTokenExchange="true"
             refreshTokenEnabled="true"
             scheme="oa4mp"
             schemeSpecificPart=""
             serverDN="CN=localhost"

             authorizationGrantLifetime="15 min"
             cleanupInterval="60 min"
             defaultAccessTokenLifetime="1009 sec"
             maxAccessTokenLifetime="30 min"
             maxClientRefreshTokenLifetime="1296000 sec"
             maxRefreshTokenLifetime="2592000 sec"

             issuer="{{- .IssuerURL -}}"
             address="{{- .IssuerURL -}}">

        <JSONWebKey>
            <path>{{- .JwksLocation -}}</path>
        </JSONWebKey>

        <!--
          The `pelican` process captures OA4MP's standard output stream and
          sends it Pelican's log location.
        -->
        <logging logFileName="/dev/stdout"
                 logName="scitokens-server"
                 logFileCount="1"
                 debug="trace"/>

        <!--
          The `pelican` process sits as a proxy between the end-user and
          OA4MP, and takes responsibility for authenticating the end-user.
        -->
        <authorizationServlet useHeader="true"
                              requireHeader="true"
                              headerFieldName="X-Pelican-User"/>

        <deviceFlowServlet verificationURI="{{- .IssuerURL -}}/device"
                           interval="5"
                           codeChars="0123456789ABCDEFX"
                           codeLength="9"
                           codePeriodLength="3"
                           codeSeparator="_"/>

        <!--
          Enable dynamic client registration.
        -->
        <clientManagement>
            <api protocol="rfc7591"
                 enabled="true"
                 endpoint="oidc-cm"
                 anonymousOK="true"
                 autoApprove="true"
                 autoApproverName="anonymous"
                 template="localhost:template"/>
            <api protocol="rfc7592"
                 enabled="true"
                 endpoint="oidc-cm"/>
            <api protocol="oa4mp"
                 enabled="false"/>
        </clientManagement>

        <unusedClientCleanup enabled="true"
                             interval="4 hr"
                             deleteVersions="false"
                             gracePeriod="6 hr">
            <whitelist>
                <clientID>localhost:template</clientID>
            </whitelist>
            <blacklist/>
        </unusedClientCleanup>

        <fileStore path="{{- .ScitokensServerLocation -}}/var/storage/file_store">
            <adminClients/>
            <clients/>
            <clientApprovals/>
            <permissions/>
            <transactions/>
            <txStore/>
            <voStore/>
        </fileStore>

        <qdl name="qdl-default"
             enabled="true"
             debug="trace"
             strict_acls="false"
             script_path="vfs#/scripts/">
            <virtual_file_systems>
                <vfs type="pass_through" access="rw">
                    <root_dir>{{- .ScitokensServerLocation -}}/var/qdl</root_dir>
                    <scheme><![CDATA[vfs]]></scheme>
                    <mount_point>/scripts</mount_point>
                </vfs>
            </virtual_file_systems>
            <modules>
                <module type="java" import_on_start="true">
                    <class_name>org.oa4mp.server.loader.qdl.OA2QDLLoader</class_name>
                </module>
            </modules>
        </qdl>

        <mail enabled="false"/>
    </service>
</config>
