#
# Copyright (C) 2024, Pelican Project, Morgridge Institute for Research
#
# Licensed under the Apache License, Version 2.0 (the "License"); you
# may not use this file except in compliance with the License.  You may
# obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
all.role server
if exec xrootd
  xrd.port {{.Cache.CalculatedPort}}
  xrd.protocol http:{{.Cache.CalculatedPort}} libXrdHttp.so
fi
ofs.osslib libXrdPss.so
pss.cachelib libXrdPfc.so
xrd.tls {{.Cache.RunLocation}}/copied-tls-creds.crt {{.Cache.RunLocation}}/copied-tls-creds.crt
{{if .Server.TLSCACertificateDirectory}}
xrd.tlsca certdir {{.Server.TLSCACertificateDirectory}}
{{else}}
xrd.tlsca certfile {{.Server.TLSCACertificateFile}}
{{end}}
http.header2cgi Authorization authz
http.header2cgi X-Pelican-Timeout pelican.timeout
{{if .Cache.EnableVoms}}
http.secxtractor /usr/lib64/libXrdVoms.so
{{end}}
http.staticpreload http://static/robots.txt {{.Xrootd.RobotsTxtFile}}
{{if .Server.DropPrivileges}}
http.exthandler xrdpelican libXrdHttpPelican.so
{{end}}
{{if .Xrootd.Sitename}}
all.sitename {{.Xrootd.Sitename}}
{{end}}
xrd.report {{if .Xrootd.SummaryMonitoringHost -}}{{.Xrootd.SummaryMonitoringHost}}:{{.Xrootd.SummaryMonitoringPort}},{{- end}}127.0.0.1:{{.Xrootd.LocalMonitoringPort}} every 30s
xrootd.monitor all auth flush 30s window 5s fstat 60 lfn ops xfr 5 {{if .Xrootd.DetailedMonitoringHost -}} dest redir fstat info files user pfc tcpmon ccm throttle {{.Xrootd.DetailedMonitoringHost}}:{{.Xrootd.DetailedMonitoringPort}} {{- end}} dest redir fstat info files user pfc tcpmon ccm throttle 127.0.0.1:{{.Xrootd.LocalMonitoringPort}}
all.adminpath {{.Cache.RunLocation}}
all.pidpath {{.Cache.RunLocation}}
xrootd.seclib libXrdSec.so
sec.protocol ztn
ofs.authorize 1
acc.audit deny grant
acc.authdb {{.Cache.RunLocation}}/authfile-cache-generated
acc.authrefresh {{.Xrootd.AuthRefreshInterval}}
ofs.authlib ++ libXrdAccSciTokens.so config={{.Cache.RunLocation}}/scitokens-cache-generated.cfg
all.export {{.Cache.ExportLocation}}
xrootd.chksum max 2 md5 adler32
xrootd.trace emsg login stall redirect
xrootd.tls all
xrd.network nodnr
pfc.blocksize 128k
{{if .Cache.EnablePrefetch}}
pfc.prefetch {{.Cache.BlocksToPrefetch}}
{{else}}
pfc.prefetch 0
{{- end}}
pfc.writequeue 16 4
pfc.ram 4g
# Note that I assume we've already validated file directives -- if we have one defined, we _must_ have all three defined, which should be checked before we get here.
pfc.diskusage {{if .Cache.LowWatermark}}{{.Cache.LowWatermark}}{{else}}0.90{{end}} {{if .Cache.HighWaterMark}}{{.Cache.HighWaterMark}}{{else}}0.95{{end}}{{if .Cache.FilesBaseSize}} files {{.Cache.FilesBaseSize}} {{.Cache.FilesNominalSize}} {{.Cache.FilesMaxSize}}{{end}} purgeinterval 300s
xrootd.fslib ++ throttle # throttle plugin is needed to calculate server IO load
{{- if .Cache.LotmanCfg.Enabled}}
pfc.purgelib libXrdPurgeLotMan.so {{.Cache.LotmanCfg.LotHome}} {{range  $value := .Cache.LotmanCfg.PurgeOrder}}{{$value}} {{end}}
{{- end}}
http.tlsclientauth {{if .Cache.EnableTLSClientAuth -}} on {{else}} off {{- end -}}
{{if .Cache.Concurrency}}
throttle.throttle concurrency {{.Cache.Concurrency}}
{{end}}
pss.origin {{.Cache.PSSOrigin}}
oss.localroot {{.Cache.NamespaceLocation}}
pfc.spaces data meta
{{- range $value := .Cache.DataLocations}}
oss.space data {{$value}}
{{- end}}
{{- range $value := .Cache.MetaLocations}}
oss.space meta {{$value}}
{{- end}}
pss.debug
pfc.trace {{.Logging.CachePfc}}
pss.setopt {{.Logging.PssSetOptCache}}
pss.trace {{.Logging.CachePss}}
ofs.trace {{.Logging.CacheOfs}}
xrd.trace {{.Logging.CacheXrd}}
xrootd.trace {{.Logging.CacheXrootd}}
scitokens.trace {{.Logging.CacheScitokens}}
http.trace {{.Logging.CacheHttp}}
{{if .Xrootd.ConfigFile}}
continue {{.Xrootd.ConfigFile}}
{{end}}
