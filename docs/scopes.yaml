#
# Copyright (C) 2024, Pelican Project, Morgridge Institute for Research
#
# Licensed under the Apache License, Version 2.0 (the "License"); you
# may not use this file except in compliance with the License.  You may
# obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# This file contains structured documentaion about the scopes of JWTs
# that will be issued and exchanged for Pelican servers to communicate with
# each other as well as for users to access functions in Pelican server Web UI

# Naming covention: <resource_name>.<action_name> snake case for naming

############################
#     Top-level Scopes     #
############################
---
name: pelican.advertise
description: >-
  For origin and cache to advertise itself to be registered at the director
issuedBy: ["origin", "cache"]
acceptedBy: ["director"]
---
name: pelican.director_test_report
description: >-
  For the director to report test result of file transfer back to origins
issuedBy: ["director"]
acceptedBy: ["origin"]
---
name: pelican.director_service_discovery
description: >-
  For director's Prometheus instance to discover available origins to scrape from
issuedBy: ["director"]
acceptedBy: ["director"]
---
name: pelican.namespace_delete
description: >-
  For namespace client to delete a namespace from namespace registry
issuedBy: ["client"]
acceptedBy: ["registry"]
---
############################
#      Web UI Scopes       #
############################
name: web_ui.access
description: >-
  For user to access various server Web UI
issuedBy: ["*"]
acceptedBy: ["*"]
---
############################
#     Registry Scopes      #
############################
name: registry.edit_registration
description: >-
  For origin admin to edit namespace registration at the registry
issuedBy: ["origin"]
acceptedBy: ["registry"]
---
############################
#    Monitoring Scopes     #
############################
name: monitoring.scrape
description: >-
  For server's Prometheus instance to scrape its Prometheus http data exporter at /metrics
issuedBy: ["*"]
acceptedBy: ["*"]
---
name: monitoring.query
description: >-
  For Web UI user and third-party tools to access server's Prometheus query engine endpoints at /api/v1.0/prometheus
issuedBy: ["web_ui"]
acceptedBy: ["*"]
---
############################
#       Broker Scopes      #
############################
name: broker.reverse
description: >-
  Permits reversal requests sent to the broker by a cache.
issuedBy: ["cache"]
acceptedBy: ["broker"]
---
name: broker.retrieve
description: >-
  Permits retrieval of requests to an origin
issuedBy: ["origin"]
acceptedBy: ["broker"]
---
name: broker.callback
description: >-
  Permits callbacks from the origin to the cache in response to a reversal request
issuedBy: ["origin"]
acceptedBy: [cache"]
---
############################
#    LocalCache Scopes     #
############################
name: localcache.purge
description: >-
  Permits invocation of the purge routine in a local cache
issuedBy: ["localcache"]
acceptedBy: ["localcache"]
---
############################
#      Storage Scopes      #
############################
name: "storage.read"
description: >-
  For granting object read permissions to the bearer of the token. This scope must also posses a path to be valid, eg `storage.read:/foo/bar`
issuedBy: ["origin"]
acceptedBy: ["origin", "cache"]
---
name: "storage.create"
description: >-
  For granting object creation permissions to the bearer of token. This scope must also posses a path to be valid, eg `storage.create:/foo/bar`
issuedBy: ["origin"]
acceptedBy: ["origin", "cache"]
---
name: "storage.modify"
description: >-
  For granting object modification permissions to the bearer of the token. This scope must also posses a path to be valid, eg `storage.modify:/foo/bar`
issuedBy: ["origin"]
acceptedBy: ["origin", "cache"]
---
name: "storage.stage"
description: >-
  For granting object staging permissions to the bearer of the token. This scope must also posses a path to be valid, eg `storage.stage:/foo/bar`
issuedBy: ["origin"]
acceptedBy: ["origin", "cache"]
---
############################
#      Lotman Scopes       #
############################
name: "lot.create"
description: >-
  For creating a new lot
issuedBy: ["origin"]
acceptedBy: ["cache"]
---
name: "lot.read"
description: >-
  For getting/reading the contents of a lot from a cache
issuedBy: ["origin"]
acceptedBy: ["cache"]
---
name: "lot.modify"
description: >-
  For modifying the contents of a lot in a cache
issuedBy: ["origin"]
acceptedBy: ["cache"]
---
name: "lot.delete"
description: >-
  For deleting a lot from a cache
issuedBy: ["origin"]
acceptedBy: ["cache"]
